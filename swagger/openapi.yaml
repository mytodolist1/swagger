openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Jelaskan disini apa saja yang perlu dijelaskan
    termasuk informasi yang diperlukan untuk dinilai
    term of service isi dari link repo dari swagger ini
  termsOfService: https://github.com/mytodolist2/mytodolist2.github.io/tree/main/swagger
  contact:
    email: dirgafebrian45@gmail.com
  license:
    name: Mytodolist Package
    url: https://pkg.go.dev/github.com/mytodolist1/be_p3
  version: 0.0.8
externalDocs:
  description: Repo GCF
  url: https://mytodolist1.github.io/cloudfunction_todo/
servers:
  - url: https://asia-southeast2-mytodolist-402507.cloudfunctions.net
tags:
  - name: user
    description: Data User
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://mytodolist1.github.io/cloudfunction_todo/GET/
  - name: auth
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://mytodolist1.github.io/cloudfunction_todo/POST/
  - name: --
    description: Get Token and Authorize
paths:
  /mytodolist:
    get:
      tags:
        - user
      summary: Get All User
      description: List Data User
      operationId: getAllUser
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid status value
  /mytodolist-post:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          # properties:
          #   type: 
          #     type: string
            # coordinates: 
            #   type: array
        username:
          type: string
          # properties:
          #   name:
          #     type: string
        password:
          type: string
          # properties:
          #   name:
          #     type: string
        role:
          type: string
    Auth:
      type: object
      properties:
        username:
          type: string
          example: budiman
        password:
          type: string
          example: secret
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: fehguy
        token:
          type: string
          example: fehguy
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header